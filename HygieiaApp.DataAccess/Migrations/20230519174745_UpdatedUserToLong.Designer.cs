// <auto-generated />
using System;
using HygieiaApp.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HygieiaApp.DataAccess.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230519174745_UpdatedUserToLong")]
    partial class UpdatedUserToLong
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HygieiaApp.Models.Models.Immunization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UsedFor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Immunizations");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.ImmunizationPatient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateOfVaccination")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("ImmunizationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ImmunizationId");

                    b.HasIndex("UserId");

                    b.ToTable("ImmunizationPatients");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.MedicalCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("NameOfDiagnosis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid?>("PatientMedicalConditionId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Symptoms")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Treatment")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("PatientMedicalConditionId");

                    b.ToTable("MedicalConditions");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.MedicalConditionMedicated", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("Dosage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<Guid>("MedicalConditionMedicationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MedicalConditionPatientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("MedicalConditionMedicationId");

                    b.HasIndex("MedicalConditionPatientId");

                    b.ToTable("MedicalConditionMedicateds");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.MedicalConditionMedication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<decimal>("MaximumDosage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("MedicalConditionId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("MedicationId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("MedicalConditionId");

                    b.HasIndex("MedicationId");

                    b.ToTable("MedicalConditionMedications");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.Medication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("SideEffects")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.PatientDoctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("DoctorsId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PatientsId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("DoctorsId");

                    b.HasIndex("PatientsId");

                    b.ToTable("PatientDoctors");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.PatientMedicalCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateOfDiagnosis")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("char(36)");

                    b.Property<int>("Stage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.ToTable("PatientMedicalConditions");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8203f3a3-ad8f-402b-80bc-a9be6ed40695"),
                            Name = 2
                        },
                        new
                        {
                            Id = new Guid("19d7509f-d5ab-4f56-afb1-5b1e4b4bd810"),
                            Name = 1
                        },
                        new
                        {
                            Id = new Guid("a08e72cd-11d6-4d4a-8037-d8d2867d13da"),
                            Name = 0
                        });
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.Scheduler", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateOfAppointment")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("DoctorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Reminder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("PatientId");

                    b.ToTable("Schedulers");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.TestResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TestResults");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.TestResultsPatient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateOfTesting")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<Guid>("PatientId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Results")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("TestResultId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("PatientId");

                    b.HasIndex("TestResultId");

                    b.ToTable("TestResultsPatients");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<long>("MBO")
                        .HasMaxLength(9)
                        .HasColumnType("bigint");

                    b.Property<long>("OIB")
                        .HasMaxLength(11)
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<Guid>("RoleID")
                        .HasColumnType("char(36)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.ImmunizationPatient", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.Immunization", "Immunization")
                        .WithMany()
                        .HasForeignKey("ImmunizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HygieiaApp.Models.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Immunization");

                    b.Navigation("User");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.MedicalCondition", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.PatientMedicalCondition", null)
                        .WithMany("MedicalCondition")
                        .HasForeignKey("PatientMedicalConditionId");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.MedicalConditionMedicated", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.MedicalConditionMedication", "MedicalConditionMedication")
                        .WithMany()
                        .HasForeignKey("MedicalConditionMedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HygieiaApp.Models.Models.PatientMedicalCondition", "MedicalConditionPatient")
                        .WithMany()
                        .HasForeignKey("MedicalConditionPatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalConditionMedication");

                    b.Navigation("MedicalConditionPatient");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.MedicalConditionMedication", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.MedicalCondition", "MedicalCondition")
                        .WithMany()
                        .HasForeignKey("MedicalConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HygieiaApp.Models.Models.Medication", "Medication")
                        .WithMany()
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedicalCondition");

                    b.Navigation("Medication");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.PatientDoctor", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.User", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HygieiaApp.Models.Models.User", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.PatientMedicalCondition", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.User", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.Scheduler", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.User", "Doctor")
                        .WithMany()
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HygieiaApp.Models.Models.User", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.TestResultsPatient", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.User", "Patient")
                        .WithMany()
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HygieiaApp.Models.Models.TestResult", "TestResult")
                        .WithMany()
                        .HasForeignKey("TestResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Patient");

                    b.Navigation("TestResult");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.User", b =>
                {
                    b.HasOne("HygieiaApp.Models.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("HygieiaApp.Models.Models.PatientMedicalCondition", b =>
                {
                    b.Navigation("MedicalCondition");
                });
#pragma warning restore 612, 618
        }
    }
}
